{"version":3,"sources":["../../../src/components/Router.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { EVENTS } from \"../consts\";\r\nimport { Page404 } from \"../pages/404\";\r\nimport { match } from \"path-to-regexp\";\r\nimport { Children } from \"react\";\r\nimport { getCurrentPath } from \"../utils/utils\";\r\n\r\nfunction Router({ children, routes = [] }) {\r\n\r\n  const [currentPath, setCurrentPath] = useState(getCurrentPath());\r\n  useEffect(() => {\r\n    const onLocationChange = () => {\r\n      setCurrentPath(getCurrentPath());\r\n    }\r\n    window.addEventListener(EVENTS.PUSHSTATE, onLocationChange)\r\n    window.addEventListener(EVENTS.POPSTATE, onLocationChange)\r\n\r\n    return () => {\r\n      window.removeEventListener(EVENTS.PUSHSTATE, onLocationChange)\r\n      window.removeEventListener(EVENTS.POPSTATE, onLocationChange)\r\n\r\n    }\r\n  }, [])\r\n\r\n  let routeParams = {}\r\n\r\n  // Añadimos las rutas configuradas en los hijos\r\n  // utilizaremos la utilidad de react Children que permite leer sus hijos\r\n  const routesFromChildren = Children.map(children, ({ props, type }) => {\r\n    return type.name === \"Route\" ? props : null\r\n  })\r\n\r\n  const routesToUse = routes.concat(routesFromChildren).filter(Boolean);\r\n\r\n  const Page = routesToUse.find(({ path }) => {\r\n    // Si el path coincide\r\n    if (path === currentPath) return true\r\n    // Creamos una función para encontrar coincidencias con la ruta dinamica\r\n    // /about/:query\r\n    const matcherUrl = match(path, { decode: decodeURIComponent })\r\n    // buscamos las coincidencias con nuestra ruta actual\r\n    // /about/react\r\n    const matched = matcherUrl(currentPath);\r\n    if (!matched) return false\r\n    // Guardamos las coincidencias\r\n    // matched.params.query === 'react'\r\n    routeParams = matched.params\r\n    return true\r\n  })?.component\r\n  return Page\r\n    ? <Page routeParams={routeParams} />\r\n    : <Page404 routeParams={routeParams} />\r\n}\r\n\r\nexport { Router }"],"names":["useEffect","useState","EVENTS","Page404","match","Children","getCurrentPath","Router","children","routes","routesToUse","currentPath","setCurrentPath","onLocationChange","window","addEventListener","PUSHSTATE","POPSTATE","removeEventListener","routeParams","routesFromChildren","map","props","type","name","concat","filter","Boolean","Page","find","path","matcherUrl","decode","decodeURIComponent","matched","params","component"],"mappings":"0CAAA,QAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAQ,AAC5C,QAASC,MAAM,KAAQ,WAAY,AACnC,QAASC,OAAO,KAAQ,cAAe,AACvC,QAASC,KAAK,KAAQ,gBAAiB,AACvC,QAASC,QAAQ,KAAQ,OAAQ,AACjC,QAASC,cAAc,KAAQ,gBAAiB,CAEhD,SAASC,OAAO,CAAEC,QAAQ,CAAEC,OAAS,EAAE,CAAE,MA2B1BC,kBAzBb,KAAM,CAACC,YAAaC,eAAe,CAAGX,SAASK,kBAC/CN,UAAU,KACR,MAAMa,iBAAmB,KACvBD,eAAeN,iBACjB,EACAQ,OAAOC,gBAAgB,CAACb,OAAOc,SAAS,CAAEH,kBAC1CC,OAAOC,gBAAgB,CAACb,OAAOe,QAAQ,CAAEJ,kBAEzC,MAAO,KACLC,OAAOI,mBAAmB,CAAChB,OAAOc,SAAS,CAAEH,kBAC7CC,OAAOI,mBAAmB,CAAChB,OAAOe,QAAQ,CAAEJ,iBAE9C,CACF,EAAG,EAAE,EAEL,IAAIM,YAAc,CAAC,EAInB,MAAMC,mBAAqBf,SAASgB,GAAG,CAACb,SAAU,CAAC,CAAEc,KAAK,CAAEC,IAAI,CAAE,IAChE,OAAOA,KAAKC,IAAI,GAAK,QAAUF,MAAQ,IACzC,GAEA,MAAMZ,YAAcD,OAAOgB,MAAM,CAACL,oBAAoBM,MAAM,CAACC,SAE7D,MAAMC,MAAOlB,kBAAAA,YAAYmB,IAAI,CAAC,CAAC,CAAEC,IAAI,CAAE,IAErC,GAAIA,OAASnB,YAAa,OAAO,KAGjC,MAAMoB,WAAa3B,MAAM0B,KAAM,CAAEE,OAAQC,kBAAmB,GAG5D,MAAMC,QAAUH,WAAWpB,aAC3B,GAAI,CAACuB,QAAS,OAAO,MAGrBf,YAAce,QAAQC,MAAM,CAC5B,OAAO,IACT,iBAdazB,kBAcT0B,SAAS,CACb,OAAOR,KACH,KAACA,MAAKT,YAAaA,cACnB,KAAChB,SAAQgB,YAAaA,aAC5B,CAEA,OAASZ,MAAM,CAAE"}