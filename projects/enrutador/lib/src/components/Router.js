import{jsx as _jsx}from"react/jsx-runtime";import{useEffect,useState}from"react";import{EVENTS}from"../consts";import{Page404}from"../pages/404";import{match}from"path-to-regexp";import{Children}from"react";import{getCurrentPath}from"../utils/utils";function Router({children,routes=[]}){var _routesToUse_find;const[currentPath,setCurrentPath]=useState(getCurrentPath());useEffect(()=>{const onLocationChange=()=>{setCurrentPath(getCurrentPath())};window.addEventListener(EVENTS.PUSHSTATE,onLocationChange);window.addEventListener(EVENTS.POPSTATE,onLocationChange);return()=>{window.removeEventListener(EVENTS.PUSHSTATE,onLocationChange);window.removeEventListener(EVENTS.POPSTATE,onLocationChange)}},[]);let routeParams={};const routesFromChildren=Children.map(children,({props,type})=>{return type.name==="Route"?props:null});const routesToUse=routes.concat(routesFromChildren).filter(Boolean);const Page=(_routesToUse_find=routesToUse.find(({path})=>{if(path===currentPath)return true;const matcherUrl=match(path,{decode:decodeURIComponent});const matched=matcherUrl(currentPath);if(!matched)return false;routeParams=matched.params;return true}))==null?void 0:_routesToUse_find.component;return Page?_jsx(Page,{routeParams:routeParams}):_jsx(Page404,{routeParams:routeParams})}export{Router};
//# sourceMappingURL=Router.js.map